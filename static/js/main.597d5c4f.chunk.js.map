{"version":3,"sources":["components/Option.js","components/Chooser.js","components/GetCategory.js","components/CheckMultiPack.js","components/Quantifier.js","components/QuantifierWithButton.js","components/GetQuantity.js","components/GetProductSize.js","components/GetServingSize.js","components/GetProductCost.js","components/Final.js","App.js","serviceWorker.js","index.js"],"names":["Option","_ref","option","optionSelected","react_default","a","createElement","className","onClick","Chooser","options","display","map","components_Option","key","GetCategory","props","getItems","item","category","components_Chooser","update","getItem","multiPack","singlePack","isSingle","qty","updateFinal","CheckMultiPack","product","currentFinal","charAt","toUpperCase","slice","toLowerCase","Quantifier","_props$int","int","_props$min","min","_props$currency","currency","_props$percentage","percentage","_props$placeholder","placeholder","label","_props$inputDisabled","inputDisabled","step","iconClass","type","value","onChange","e","target","valid","num","validReg","isNaN","Number","test","validateNum","updateValue","onFocus","id","disabled","QuantifierWithButton","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","quantitySubmitted","preventDefault","submit","state","setState","_this$props","_this$props$buttonTex","submitValue","buttonText","passingProps","objectWithoutProperties","onSubmit","components_Quantifier","assign","Component","GetQuantity","components_QuantifierWithButton","quantity","GetProductSize","sizesText","index","indexOf","updates","size","sizes","sizeText","GetServingSize","servingsText","servingSize","servings","servingSizeText","GetProductCost","prompt","cost","Final","final","toFixed","salePrice","markup","pouringCost","profit","focusedInput","_ref2","_ref3","header","concat","sharedProps","inputFocusHandler","bind","costProps","objectSpread","saleProps","updateSalePrice","markupProps","updateMarkup","profitProps","toString","updateProfit","App","stages","component","isNull","items","find","_this2","console","log","i","length","elementToCheck","components_Final","componentToDisplay","getCompenentForStage","defaultProps","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.597d5c4f.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Option({option, optionSelected}) {\n\n\n    return (\n        <div className=\"col s12\">\n        <button className=\"btn\" onClick={() => {optionSelected(option)}}>{option}</button>\n        </div>\n    );\n}\n\nexport default Option;","import React from 'react';\nimport Option from'./Option';\n\nfunction Chooser({options, optionSelected}) {\n    const display = options.map( option => <Option key={option} option={option} optionSelected={optionSelected} />)\n    return (\n        <div className=\"container\">\n            {display}\n        </div>\n    );\n}\n\nexport default Chooser;","import React from 'react';\nimport Chooser from './Chooser'\n\nfunction GetCategory(props) {\n    const items = props.getItems();\n    const options = items.map( item => item.category);\n\n    const optionSelected = (option) => {\n        const update = {category : option};\n\n        //check it Item is selected is limited to single or multiple and apply as such\n        const item = props.getItem(option);\n        if (item.multiPack && !item.singlePack)\n        {\n            update.isSingle = false;\n        }\n        else if (!item.multiPack && item.singlePack)\n        {\n            update.isSingle = true;\n            update.qty = 1;\n        }\n\n        props.updateFinal(update);\n    }\n\n    return (\n        <div className=\"green-text text-darken-2\">\n            <h3>Please Select the Type of Product:</h3>\n            <Chooser options={options} optionSelected={optionSelected} />\n        </div>\n    );\n}\n\nexport default GetCategory;","import React from 'react';\nimport Chooser from './Chooser';\n\nfunction CheckMultiPack(props) {\n    \n    const options = [\"Individually\", \"By Case\"];\n    const product = props.currentFinal.category.charAt(0).toUpperCase() + props.currentFinal.category.slice(1).toLowerCase();\n\n    const optionSelected = (option) => {\n        const update = {};\n        if (option === options[0])\n        {\n            update.isSingle = true;\n            update.qty = 1;\n        }\n        else\n        {\n            update.isSingle = false;\n        }\n        props.updateFinal(update);\n    }\n\n    return (\n        <div className=\"green-text text-darken-2\">\n            <h3>Is the {product} priced individually or by case? </h3>\n            <Chooser options={options} optionSelected={optionSelected} />\n        </div>\n    );\n}\n\nexport default CheckMultiPack;","import React from 'react';\n\nfunction Quantifier(props) {\n\n    const {int = true, min = \"1\", currency = false, percentage = false, placeholder = \"1\", label, inputDisabled = false} = props;\n\n    const validateNum = (num) => {\n        //sets a regular expression for an int or float with 2 decimals max\n        const validReg = (int) ? /^-?\\d+$/ : /^-?\\d*\\.?\\d{1,2}$/;\n        if ((isNaN(num)) || Number(num) < Number(min) || !validReg.test(num))\n            return false;\n        else\n            return true;\n    }\n\n    const updateValue = (e) => {\n        const value = e.target.value;\n        const valid = validateNum(value);\n        props.updateValue({value, valid});\n    }\n\n    const onFocus = (e) => {\n        props.onFocus && props.onFocus(props.id);   //checks for an optional onFocus prop and calls it if it exists\n    }\n\n    const step = (int) ? \"1\" : \"0.01\";\n    const iconClass = (currency) ? \"fas fa-euro-sign prefix\" : (percentage) ? \"fas fa-percentage prefix\" : \"hide\";\n\n    return (\n        <div className=\"input-field\">\n            <i className={iconClass}></i>\n            <label className=\"active\">{label}</label>\n            <input type=\"number\" min={min} step={step} value={props.value} placeholder={placeholder} onChange={updateValue} onFocus={onFocus} disabled={inputDisabled} />\n        </div>\n    );\n}\n\nexport default Quantifier;","import React, {Component} from 'react';\nimport Quantifier from './Quantifier';\n\nclass QuantifierWithButton extends Component {\n    //const {submitFunc, buttonText = \"submit\", ...passingProps} = props;\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.state.value = this.props.value;\n        this.state.valid = (this.props.value) ? true : false;\n\n    }\n\n\n    quantitySubmitted = (e) => {\n        e.preventDefault();\n        this.props.submit(this.state.value);\n    }\n\n    updateValue = ({value, valid}) => {\n        this.setState({value , valid});\n    }\n    \n    render() {\n        //remove submitValue function and initial value from props and pass the rest\n        //extract buttonText if available or use SUBMIT.\n        const {submitValue, buttonText = \"SUBMIT\",  value, ...passingProps} = this.props;\n\n        return (\n            <form onSubmit={this.quantitySubmitted}>\n                <Quantifier {...passingProps} value={this.state.value} updateValue={this.updateValue} />\n                <button className=\"btn\" disabled={!this.state.valid} >{buttonText}</button>\n            </form>\n        );\n    }\n    \n}\n\nexport default QuantifierWithButton;","import React from 'react';\nimport QuaintifierWithButton from './QuantifierWithButton'\n\nfunction GetQuantity(props) {\n\n    const quantitySumbitted = (quantity) => {\n        const update ={qty : quantity};\n        props.updateFinal(update);\n    }\n\n    return (\n    <div className=\"green-text text-darken-2\">\n        <h3>Please enter the No. of bottles per case:</h3>\n        <QuaintifierWithButton  value=\"\" submit={quantitySumbitted} label=\"No. of bottles:\" />\n    </div>\n    );\n}\n\nexport default GetQuantity;","import React from 'react';\nimport Chooser from './Chooser';\n\nfunction GetProductSize(props) {\n\n    const item = props.getItem(props.currentFinal.category);\n    const options = item.sizesText;\n\n    const optionSelected = (option) => {\n        const index = item.sizesText.indexOf(option);\n        const optionAmt = item.sizes[index];\n        const updates = {size : optionAmt, sizeText : option};\n        props.updateFinal(updates);\n    }\n\n    return (\n        <div className=\"green-text text-darken-2\">\n            <h3>Please Select size of Product:</h3>\n            <Chooser options={options} optionSelected={optionSelected} />\n        </div>\n    );\n}\n\nexport default GetProductSize;","import React from 'react';\nimport Chooser from './Chooser';\n\nfunction GetServingSize(props) {\n\n    const item = props.getItem(props.currentFinal.category);\n    const options = item.servingsText;\n\n    const optionSelected = (option) => {\n        const index = item.servingsText.indexOf(option);\n        const optionAmt = item.servings[index];\n        const updates = {servingSize : optionAmt, servingSizeText : option};\n        props.updateFinal(updates);\n    }\n\n    return (\n        <div className=\"green-text text-darken-2\">\n            <h3>Please Select serving size of Product:</h3>\n            <Chooser options={options} optionSelected={optionSelected} />\n        </div>\n    );\n}\n\nexport default GetServingSize;","import React from 'react';\nimport QuaintifierWithButton from './QuantifierWithButton'\n\n\nfunction GetProductCost(props) {\n\n    const prompt = (props.currentFinal.isSingle) ? \"Please enter the cost price:\" :\n                    \"Please enter the cost price per case:\";\n\n    \n    const costSubmitted = (quantity) => {\n    const update ={cost : quantity};\n    props.updateFinal(update);\n    }\n    \n\n    return (\n        <div className=\"green-text text-darken-2\">\n            <h3>{prompt}</h3>\n            <QuaintifierWithButton value=\"\" int={false} currency={true} min=\"0.01\"submit={costSubmitted} label=\"Price &euro;\"/>\n        </div>\n        );\n}\n\nexport default GetProductCost;","import React, {Component} from 'react';\nimport Quantifier from './Quantifier';\n\nclass Final extends Component {\n\n    constructor(props) {\n        super(props);\n\n        const final = props.final;\n        const cost = ((final.cost / final.qty) / (final.size / final.servingSize)).toFixed(2);\n\n        this.state = {\n            cost : cost,\n            salePrice : cost,\n            markup : 0,\n            pouringCost : null,\n            profit : 0,\n            focusedInput : null\n        };\n    }\n\n    inputFocusHandler(id) {\n        this.setState({focusedInput : id});\n    }\n\n    updateSalePrice({value, valid}) {\n        const salePrice = Number(value);\n        \n        this.setState({ salePrice })\n        //if number is valid update all markup and profit\n        if (valid && this.state.focusedInput === \"salePrice\")\n        {\n            const profit = (salePrice - this.state.cost).toFixed(2);\n            const markup = (profit * 100 / this.state.cost).toFixed(2);\n            this.setState({ profit, markup });\n        }\n    }\n\n    updateMarkup({value, valid}) {\n        const markup = value;\n\n        this.setState({ markup });\n        if(valid && this.state.focusedInput === \"markup\")\n        {\n            const profit = Number(((markup * this.state.cost) / 100)).toFixed(2);\n            const salePrice = (Number(profit) + Number(this.state.cost)).toFixed(2);\n            this.setState({ profit, salePrice });\n        }\n    }\n\n    updateProfit({value, valid}) {\n        const profit = value;\n\n        this.setState({ profit });\n        if(valid && this.state.focusedInput === \"profit\")\n        {\n            const salePrice = (Number(profit) + Number(this.state.cost)).toFixed(2);\n            const markup = (profit * 100 / this.state.cost).toFixed(2);\n            this.setState({ salePrice , markup });\n        }\n    }\n\n    render() {\n        const header = `Final costing per ${this.props.final.servingSizeText} :`;\n        const sharedProps = {\n            int : false,\n            placeholder : \"0.01\",\n            onFocus : this.inputFocusHandler.bind(this)\n        };\n        const costProps = { ...sharedProps, \n            currency : true,\n            value : this.state.cost,\n            label : \"Cost Price:\",\n            inputDisabled : true\n        };\n\n        const saleProps = { ...sharedProps,\n            min : \"0.01\",\n            currency : true,\n            value : this.state.salePrice,\n            label : \"Sale Price:\",\n            updateValue : this.updateSalePrice.bind(this)\n        };\n\n        const markupProps = { ...sharedProps,\n            min : \"-99.90\",\n            percentage : true,\n            value : this.state.markup,\n            label : \"Markup:\",\n            updateValue : this.updateMarkup.bind(this)\n        };\n\n        const profitProps = { ...sharedProps,\n            min : (0.01 - this.state.cost).toString(), \n            currency : true,\n            value : this.state.profit,\n            label : \"Profit:\",\n            updateValue : this.updateProfit.bind(this)\n        };\n\n        return (\n            <div className=\"final green-text text-darken-2\">\n            <h3>{header}</h3>\n                <div className=\"row\">\n                    <Quantifier {...costProps } id=\"cost\"/>\n                    <Quantifier {...saleProps } id=\"salePrice\"/>\n                    <Quantifier {...markupProps } id=\"markup\"/>\n                    <Quantifier {...profitProps } id=\"profit\"/>\n                </div>\n            </div>\n        );\n\n    }\n\n    // render() {\n    //     console.log(this.state);\n    //     const euroIcon = \"fas fa-euro-sign prefix\";\n    //     const percentIcon = \"fas fa-percentage prefix\";\n    //     const header = \"Final Costing per \" + this.props.final.servingSizeText + \":\";\n    //     return (\n    //     <div className=\"final green-text text-darken-2\">\n    //         <h3>{header}</h3>\n    //         <div className=\"row\">\n    //             <div className=\"input-field col s4\">\n    //                 <i className={euroIcon}></i>\n    //                 <label className=\"active\">Cost Price:</label>\n    //                 <input type=\"number\" value={this.state.cost} disabled={true}/>\n    //             </div>\n    //             <div className=\"input-field col s4\">\n    //                     <i className={euroIcon}></i>\n    //                     <label className=\"active\">Sale Price:</label>\n    //                     <input type=\"number\" id=\"salePrice\" onFocus={this.inputFocusHandler.bind(this)}  min=\"0\" step=\"0.01\" value={this.state.salePrice} onChange={this.updateSalePrice.bind(this)} />\n    //             </div>\n    //             <div className=\"input-field col s4\">\n    //                 <i className={percentIcon}></i>\n    //                 <label className=\"active\">Markup: </label>\n    //                 <input type=\"number\" value={this.state.markup} disabled={true}/>\n    //             </div>\n    //         </div>\n    //         <div className=\"row\">\n    //         <div className=\"input-field col s4\">\n    //                 <i className={euroIcon}></i>\n    //                 <label className=\"active\">Profit: </label>\n    //                 <input type=\"number\" value={this.state.profit} disabled={true}/>\n    //             </div>\n    //         </div>\n    //     </div>\n    //     );\n    // }\n}\n\nexport default Final;","import React, { Component } from 'react';\nimport GetCategory from './components/GetCategory';\nimport CheckMultiPack from './components/CheckMultiPack';\nimport GetQuantity from './components/GetQuantity';\nimport GetProductSize from './components/GetProductSize';\nimport GetServingSize from './components/GetServingSize';\nimport GetProductCost from './components/GetProductCost';\nimport Final from './components/Final';\n\nclass App extends Component {\n\n  static defaultProps = {\n    items : \n    [\n      {\n        category : \"KEG\",\n        multiPack : false,\n        singlePack : true,\n        sizesText : [\"50L\", \"30L\"],\n        sizes : [50000, 30000],\n        servingsText : [\"Pint\", \"Half-Pint\"],\n        servings : [568, 284]\n      },\n      {\n        category : \"SPIRIT\",\n        multiPack : true,\n        singlePack : true,\n        sizesText : [\"700ml\", \"1L\", \"1.5L\"],\n        sizes : [700, 1000, 1500],\n        servingsText : [\"35.5ml\", \"50ml\", \"71ml\"],\n        servings : [35.5, 50, 71]\n      }\n    ]\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stages : [\n        {component : GetCategory, isNull : \"category\"},\n        {component : CheckMultiPack, isNull : \"isSingle\"},\n        {component : GetQuantity, isNull : \"qty\"},\n        {component : GetProductSize, isNull : \"size\"},\n        {component : GetServingSize, isNull : \"servingSize\"},\n        {component : GetProductCost, isNull : \"cost\"}\n      ]\n      ,\n      final : {\n        category : null,\n        isSingle : null,\n        qty : null,\n        size : null,\n        servingSize : null,\n        cost : null\n      }\n    }\n  }\n\n  getItems() {\n    return this.props.items;\n  }\n\n  //Uses the category to grab the item it belongs to along with all it's properties.\n  getItem(category) {\n    return this.props.items.find( item => item.category === category);\n  }\n\n  updateFinal(updates) {\n    this.setState({final : {...this.state.final , ...updates}}, () => {console.log(this.state.final)})\n  }\n\n  getCompenentForStage()  {\n    //find the first null element in the final state and assign it's component to the variable component\n    let Component = null;\n    for (let i = 0; i < this.state.stages.length; i++)\n    {\n      const elementToCheck = this.state.stages[i].isNull;\n      if (this.state.final[elementToCheck] === null)\n      {\n        Component = this.state.stages[i].component;\n        break;\n      }\n    }\n\n    if (Component)\n    {\n      return <Component currentFinal={this.state.final} updateFinal={this.updateFinal.bind(this)} getItems={this.getItems.bind(this)} getItem={this.getItem.bind(this)} />;\n    }\n    else\n    {\n      return <Final final={this.state.final} />\n    }\n  }\n\n  render() {\n    const componentToDisplay = this.getCompenentForStage();\n    return (\n      <div className=\"App center-align container\">\n        {componentToDisplay}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}