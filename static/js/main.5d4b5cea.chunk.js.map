{"version":3,"sources":["components/Option.js","components/Chooser.js","components/GetCategory.js","components/CheckMultiPack.js","components/Quantifier.js","components/QuantifierWithButton.js","components/GetQuantity.js","components/GetProductSize.js","components/GetServingSize.js","components/GetProductCost.js","components/Final.js","App.js","serviceWorker.js","index.js"],"names":["Option","_ref","option","optionSelected","react_default","a","createElement","className","onClick","Chooser","options","display","map","components_Option","key","GetCategory","props","getItems","item","category","components_Chooser","update","getItem","multiPack","singlePack","isSingle","qty","updateFinal","CheckMultiPack","product","currentFinal","charAt","toUpperCase","slice","toLowerCase","Quantifier","_props$int","int","_props$min","min","_props$currency","currency","_props$placeholder","placeholder","label","step","iconClass","type","value","onChange","e","target","valid","num","validReg","isNaN","test","validateNum","updateValue","QuantifierWithButton","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","quantitySubmitted","preventDefault","submit","state","setState","_this$props","_this$props$buttonTex","submitValue","buttonText","passingProps","objectWithoutProperties","onSubmit","components_Quantifier","assign","disabled","Component","GetQuantity","components_QuantifierWithButton","quantity","GetProductSize","sizesText","index","indexOf","updates","size","sizes","sizeText","GetServingSize","servingsText","servingSize","servings","servingSizeText","GetProductCost","prompt","cost","Final","final","toFixed","salePrice","markup","pouringCost","profit","focusedInput","input","select","Number","console","log","euroIcon","header","id","onFocus","inputFocusHandler","bind","updateSalePrice","App","stages","component","isNull","items","find","_this2","objectSpread","i","length","elementToCheck","components_Final","componentToDisplay","getCompenentForStage","defaultProps","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d4b5cea.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Option({option, optionSelected}) {\n\n\n    return (\n        <div className=\"col s12\">\n        <button className=\"btn\" onClick={() => {optionSelected(option)}}>{option}</button>\n        </div>\n    );\n}\n\nexport default Option;","import React from 'react';\nimport Option from'./Option';\n\nfunction Chooser({options, optionSelected}) {\n    const display = options.map( option => <Option key={option} option={option} optionSelected={optionSelected} />)\n    return (\n        <div className=\"container\">\n            {display}\n        </div>\n    );\n}\n\nexport default Chooser;","import React from 'react';\nimport Chooser from './Chooser'\n\nfunction GetCategory(props) {\n    const items = props.getItems();\n    const options = items.map( item => item.category);\n\n    const optionSelected = (option) => {\n        const update = {category : option};\n\n        //check it Item is selected is limited to single or multiple and apply as such\n        const item = props.getItem(option);\n        if (item.multiPack && !item.singlePack)\n        {\n            update.isSingle = false;\n        }\n        else if (!item.multiPack && item.singlePack)\n        {\n            update.isSingle = true;\n            update.qty = 1;\n        }\n\n        props.updateFinal(update);\n    }\n\n    return (\n        <div className=\"green-text text-darken-2\">\n            <h3>Please Select the Type of Product:</h3>\n            <Chooser options={options} optionSelected={optionSelected} />\n        </div>\n    );\n}\n\nexport default GetCategory;","import React from 'react';\nimport Chooser from './Chooser';\n\nfunction CheckMultiPack(props) {\n    \n    const options = [\"Individually\", \"By Case\"];\n    const product = props.currentFinal.category.charAt(0).toUpperCase() + props.currentFinal.category.slice(1).toLowerCase();\n\n    const optionSelected = (option) => {\n        const update = {};\n        if (option === options[0])\n        {\n            update.isSingle = true;\n            update.qty = 1;\n        }\n        else\n        {\n            update.isSingle = false;\n        }\n        props.updateFinal(update);\n    }\n\n    return (\n        <div className=\"green-text text-darken-2\">\n            <h3>Is the {product} priced individually or by case? </h3>\n            <Chooser options={options} optionSelected={optionSelected} />\n        </div>\n    );\n}\n\nexport default CheckMultiPack;","import React from 'react';\n\nfunction Quantifier(props) {\n\n    const {int = true, min = \"1\", currency = false, placeholder = \"1\", label} = props;\n\n    const validateNum = (num) => {\n        //sets a regular expression for an int or float with 2 decimals max\n        const validReg = (int) ? /^\\d+$/ : /^\\d*\\.?\\d{1,2}$/;\n        \n        if ((isNaN(num)) || num < min || !validReg.test(num))\n            return false;\n        else\n            return true;\n    }\n\n    const updateValue = (e) => {\n        const value = e.target.value;\n        const valid = validateNum(value);\n        props.updateValue({value, valid});\n    }\n\n    const step = (int) ? \"1\" : \"0.01\";\n    const iconClass = (currency) ? \"fas fa-euro-sign prefix\" : \"hide\";\n\n    return (\n        <div className=\"input-field\">\n            <i className={iconClass}></i>\n            <label className=\"active\">{label}</label>\n            <input type=\"number\" min={min} step={step} value={props.value} placeholder={placeholder} onChange={updateValue} />\n        </div>\n    );\n}\n\nexport default Quantifier;","import React, {Component} from 'react';\nimport Quantifier from './Quantifier';\n\nclass QuantifierWithButton extends Component {\n    //const {submitFunc, buttonText = \"submit\", ...passingProps} = props;\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.state.value = this.props.value;\n        this.state.valid = (this.props.value) ? true : false;\n\n    }\n\n\n    quantitySubmitted = (e) => {\n        e.preventDefault();\n        this.props.submit(this.state.value);\n    }\n\n    updateValue = ({value, valid}) => {\n        this.setState({value , valid});\n    }\n    \n    render() {\n        //remove submitValue function and initial value from props and pass the rest\n        //extract buttonText if available or use SUBMIT.\n        const {submitValue, buttonText = \"SUBMIT\",  value, ...passingProps} = this.props;\n\n        return (\n            <form onSubmit={this.quantitySubmitted}>\n                <Quantifier {...passingProps} value={this.state.value} updateValue={this.updateValue} />\n                <button className=\"btn\" disabled={!this.state.valid} >{buttonText}</button>\n            </form>\n        );\n    }\n    \n}\n\nexport default QuantifierWithButton;","import React from 'react';\nimport QuaintifierWithButton from './QuantifierWithButton'\n\nfunction GetQuantity(props) {\n\n    const quantitySumbitted = (quantity) => {\n        const update ={qty : quantity};\n        props.updateFinal(update);\n    }\n\n    return (\n    <div className=\"green-text text-darken-2\">\n        <h3>Please enter the No. of bottles per case:</h3>\n        <QuaintifierWithButton  value=\"\" submit={quantitySumbitted} label=\"No. of bottles:\" />\n    </div>\n    );\n}\n\nexport default GetQuantity;","import React from 'react';\nimport Chooser from './Chooser';\n\nfunction GetProductSize(props) {\n\n    const item = props.getItem(props.currentFinal.category);\n    const options = item.sizesText;\n\n    const optionSelected = (option) => {\n        const index = item.sizesText.indexOf(option);\n        const optionAmt = item.sizes[index];\n        const updates = {size : optionAmt, sizeText : option};\n        props.updateFinal(updates);\n    }\n\n    return (\n        <div className=\"green-text text-darken-2\">\n            <h3>Please Select size of Product:</h3>\n            <Chooser options={options} optionSelected={optionSelected} />\n        </div>\n    );\n}\n\nexport default GetProductSize;","import React from 'react';\nimport Chooser from './Chooser';\n\nfunction GetServingSize(props) {\n\n    const item = props.getItem(props.currentFinal.category);\n    const options = item.servingsText;\n\n    const optionSelected = (option) => {\n        const index = item.servingsText.indexOf(option);\n        const optionAmt = item.servings[index];\n        const updates = {servingSize : optionAmt, servingSizeText : option};\n        props.updateFinal(updates);\n    }\n\n    return (\n        <div className=\"green-text text-darken-2\">\n            <h3>Please Select serving size of Product:</h3>\n            <Chooser options={options} optionSelected={optionSelected} />\n        </div>\n    );\n}\n\nexport default GetServingSize;","import React from 'react';\nimport QuaintifierWithButton from './QuantifierWithButton'\n\n\nfunction GetProductCost(props) {\n\n    const prompt = (props.currentFinal.isSingle) ? \"Please enter the cost price:\" :\n                    \"Please enter the cost price per case:\";\n\n    \n    const costSubmitted = (quantity) => {\n    const update ={cost : quantity};\n    props.updateFinal(update);\n    }\n    \n\n    return (\n        <div className=\"green-text text-darken-2\">\n            <h3>{prompt}</h3>\n            <QuaintifierWithButton value=\"\" int={false} currency={true} min=\"0.01\"submit={costSubmitted} label=\"Price &euro;\"/>\n        </div>\n        );\n}\n\nexport default GetProductCost;","import React, {Component} from 'react';\n\nclass Final extends Component {\n\n    constructor(props) {\n        super(props);\n\n        const final = props.final;\n        const cost = ((final.cost / final.qty) / (final.size / final.servingSize)).toFixed(2);\n\n        this.state = {\n            cost : cost,\n            salePrice : cost,\n            markup : 0,\n            pouringCost : null,\n            profit : 0,\n            focusedInput : null\n        };\n    }\n\n    inputFocusHandler(e) {\n        const input = e.target;\n        input.select();\n        this.setState({focusedInput : input});\n    }\n\n    updateSalePrice(e) {\n        const reg = /^\\d*\\.?\\d{1,2}$/\n        const salePrice = Number(e.target.value);\n        \n        this.setState({ salePrice })\n        //if number is valid update all markup and profit\n        if (!isNaN(salePrice) && salePrice > 0 && reg.test(salePrice))\n        {\n            const profit = (salePrice - this.state.cost).toFixed(2);\n            const markup = (profit * 100 / this.state.cost).toFixed(2);\n            this.setState({profit, markup});\n        }\n    }\n\n    render() {\n        console.log(this.state);\n        const euroIcon = \"fas fa-euro-sign prefix\";\n        const percentIcon = \"fas fa-percentage prefix\";\n        const header = \"Final Costing per \" + this.props.final.servingSizeText + \":\";\n        return (\n        <div className=\"final green-text text-darken-2\">\n            <h3>{header}</h3>\n            <div className=\"row\">\n                <div className=\"input-field col s4\">\n                    <i className={euroIcon}></i>\n                    <label className=\"active\">Cost Price:</label>\n                    <input type=\"number\" value={this.state.cost} disabled={true}/>\n                </div>\n                <div className=\"input-field col s4\">\n                        <i className={euroIcon}></i>\n                        <label className=\"active\">Sale Price:</label>\n                        <input type=\"number\" id=\"salePrice\" onFocus={this.inputFocusHandler.bind(this)}  min=\"0\" step=\"0.01\" value={this.state.salePrice} onChange={this.updateSalePrice.bind(this)} />\n                </div>\n                <div className=\"input-field col s4\">\n                    <i className={percentIcon}></i>\n                    <label className=\"active\">Markup: </label>\n                    <input type=\"number\" value={this.state.markup} disabled={true}/>\n                </div>\n            </div>\n            <div className=\"row\">\n            <div className=\"input-field col s4\">\n                    <i className={euroIcon}></i>\n                    <label className=\"active\">Profit: </label>\n                    <input type=\"number\" value={this.state.profit} disabled={true}/>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default Final;","import React, { Component } from 'react';\nimport GetCategory from './components/GetCategory';\nimport CheckMultiPack from './components/CheckMultiPack';\nimport GetQuantity from './components/GetQuantity';\nimport GetProductSize from './components/GetProductSize';\nimport GetServingSize from './components/GetServingSize';\nimport GetProductCost from './components/GetProductCost';\nimport Final from './components/Final';\n\nclass App extends Component {\n\n  static defaultProps = {\n    items : \n    [\n      {\n        category : \"KEG\",\n        multiPack : false,\n        singlePack : true,\n        sizesText : [\"50L\", \"30L\"],\n        sizes : [50000, 30000],\n        servingsText : [\"Pint\", \"Half-Pint\"],\n        servings : [568, 284]\n      },\n      {\n        category : \"SPIRIT\",\n        multiPack : true,\n        singlePack : true,\n        sizesText : [\"700ml\", \"1L\", \"1.5L\"],\n        sizes : [700, 1000, 1500],\n        servingsText : [\"35.5ml\", \"50ml\", \"71ml\"],\n        servings : [35.5, 50, 71]\n      }\n    ]\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stages : [\n        {component : GetCategory, isNull : \"category\"},\n        {component : CheckMultiPack, isNull : \"isSingle\"},\n        {component : GetQuantity, isNull : \"qty\"},\n        {component : GetProductSize, isNull : \"size\"},\n        {component : GetServingSize, isNull : \"servingSize\"},\n        {component : GetProductCost, isNull : \"cost\"}\n      ]\n      ,\n      final : {\n        category : null,\n        isSingle : null,\n        qty : null,\n        size : null,\n        servingSize : null,\n        cost : null\n      }\n    }\n  }\n\n  getItems() {\n    return this.props.items;\n  }\n\n  //Uses the category to grab the item it belongs to along with all it's properties.\n  getItem(category) {\n    return this.props.items.find( item => item.category === category);\n  }\n\n  updateFinal(updates) {\n    this.setState({final : {...this.state.final , ...updates}}, () => {console.log(this.state.final)})\n  }\n\n  getCompenentForStage()  {\n    //find the first null element in the final state and assign it's component to the variable component\n    let Component = null;\n    for (let i = 0; i < this.state.stages.length; i++)\n    {\n      const elementToCheck = this.state.stages[i].isNull;\n      if (this.state.final[elementToCheck] === null)\n      {\n        Component = this.state.stages[i].component;\n        break;\n      }\n    }\n\n    if (Component)\n    {\n      return <Component currentFinal={this.state.final} updateFinal={this.updateFinal.bind(this)} getItems={this.getItems.bind(this)} getItem={this.getItem.bind(this)} />;\n    }\n    else\n    {\n      return <Final final={this.state.final} />\n    }\n  }\n\n  render() {\n    const componentToDisplay = this.getCompenentForStage();\n    return (\n      <div className=\"App center-align container\">\n        {componentToDisplay}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}